{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "App2.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport NumberSpinner from \"../../dist/index.js\";\n\n  let value1 = 100;\n  let value2 = 500;\n  let value3 = 3.28;\n  let value4 = 0.5;\n  let value5 = 0.5;\n  let value6 = 50;\n  let value6input = value6;\n  let value6change = value6;\n\n</script>\n\n<h2>Svelte Number Spinner Example</h2>\n\n<p>\n  Change the values of the number spinners through mousedrag and arrow keys.<br>\n  Press <i>Alt</i> for smaller steps, <i>Alt+Shift</i> for larger steps. Double click to edit.\n</p>\n\n<table>\n  <tr>\n    <td>Standard with no range limits and a step of 1</td> \n    <td><NumberSpinner bind:value={value1} /></td> \n    <td>Current value is {value1}</td> \n  </tr>\n\n  <tr>\n    <td>Range from 0 to 1000 and only horizontal dragging and arrow keys left/right will change the value</td>  \n    <td><NumberSpinner bind:value={value2} min=0 max=1000 vertical={false} /></td> \n    <td>Current value is {value2}</td> \n  </tr>\n\n  <tr>\n    <td>Steps 0.01 and shows the values with a precision of 2 decimals</td> \n  \t<td><NumberSpinner bind:value={value3} min=-5 max=5 step=0.01 decimals=2 /></td> \n    <td>Current value is {value3}</td> \n  </tr>\n\n  <tr>\n    <td>Individual styling using props</td> \n    <td><NumberSpinner bind:value={value4} step=10 \n            mainStyle='color:#aaa; width:80px; border-radius:20px' \n            focusStyle='color:#06f'\n            editingStyle='color:#00f; background-color:#06f4' \n            fastStyle='color:#f00'\n            slowStyle='color:#0c0' \n        />\n    </td> \n    <td>Current value is {value4}</td> \n  </tr>\n\n  <tr>\n    <td>Individual styling using custom class</td> \n    <td><NumberSpinner bind:value={value5} min=0 max=1 step=0.001 decimals=3 \n            class='number-spinner-custom' \n        />\n    </td> \n    <td>Current value is {value5}</td> \n  </tr>\n\n  <tr>\n    <td>Retreiving the value using the input and change events</td> \n    <td><NumberSpinner value={value6} min=0 max=100 \n            on:change={(ev) => {value6change = ev.detail}} \n            on:input={(ev) => {value6input = ev.detail}} \n        />\n    </td> \n    <td>Current input value is {value6input}<br> \n    Current change value is {value6change}</td> \n  </tr>\n\n\n</table>\n\n\n<style>\n\n  table {\n    width: 700px;\n    margin-top: 30px;\n    padding: 0px;\n    table-layout: fixed;\n    overflow-x:auto;\n    border-collapse: collapse;\n  }\n\n  tr {\n    border-top: 1px solid #0006;\n    border-bottom: 1px solid #0006;\n  }\n\n  td {\n    margin: 0px;\n    padding: 10px 0px;\n  }\n\n  td:nth-child(1) {\n    width: 50%; \n  }\n  td:nth-child(2) {\n    width: 20%; \n    text-align: center;\n  }\n  td:nth-child(3) {\n    width: 30%; \n  }\n\n  /* custom class for the number spinner */\n\n  :global(.number-spinner-custom) {\n    display: inline-block;\n    box-sizing: border-box;\n    font-variant-numeric: tabular-nums;\n    width: 60px;\n    height: 25px;\n    margin: 0px;\n    padding: 3px;\n    background-color: #06f9;\n    color: white;\n    border-radius: 0px;\n    border: none;\n    text-align: right;\n    cursor: initial;\n  }\n\n  :global(.number-spinner-custom):focus {\n    background-color: #000;\n    outline:none;\n  }\n\n  :global(.number-spinner-custom).fast {\n    background-color: #0ccb;\n  }\n\n  :global(.number-spinner-custom).slow {\n    background-color: #66fb;\n  }\n\n  :global(.number-spinner-custom).editing {\n    background-color: #f00;\n    cursor: default;\n  }\n\n\n</style>",
    "<script>\n\timport NumberSpinner from \"../../dist/index.js\";\n\n  let value1 = 100;\n  let logs = [];\n  \n</script>\n\n<!-- ------------------------------------- -->\n\n<div class=\"row\">\n  <NumberSpinner bind:value={value1} on:consoleLog={(e) => logs = [...logs, e.detail]} />\n</div>\n\n<hr>\n\n<div class=\"console\">\n  {#each logs as log}\n    {log}<br>\n  {/each}\n</div>\n\n<!-- ------------------------------------- -->\n\n<style>\n\n  hr {\n    margin: 20px 0px;\n  }\n\n  div.row {\n    padding-top: 30px;\n    text-align: center;\n  }\n\n  div.console {\n    font-size: 10px;\n    /*margin:0px 40px;*/\n\n  }\n\n</style>"
  ],
  "names": [],
  "mappings": "AA+EE,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CACZ,YAAY,CAAE,KAAK,CACnB,WAAW,IAAI,CACf,eAAe,CAAE,QAAQ,AAC3B,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC3B,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AAChC,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CAAC,GAAG,AACnB,CAAC,AAED,iBAAE,WAAW,CAAC,CAAC,AAAC,CAAC,AACf,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,iBAAE,WAAW,CAAC,CAAC,AAAC,CAAC,AACf,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,iBAAE,WAAW,CAAC,CAAC,AAAC,CAAC,AACf,KAAK,CAAE,GAAG,AACZ,CAAC,AAIO,sBAAsB,AAAE,CAAC,AAC/B,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,UAAU,CACtB,oBAAoB,CAAE,YAAY,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,GAAG,CACZ,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AAEO,sBAAsB,AAAC,MAAM,AAAC,CAAC,AACrC,gBAAgB,CAAE,IAAI,CACtB,QAAQ,IAAI,AACd,CAAC,AAEO,sBAAsB,AAAC,KAAK,AAAC,CAAC,AACpC,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAEO,sBAAsB,AAAC,KAAK,AAAC,CAAC,AACpC,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAEO,sBAAsB,AAAC,QAAQ,AAAC,CAAC,AACvC,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,OAAO,AACjB,CAAC;ACrHD,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,IAAI,CAAC,GAAG,AAClB,CAAC,AAED,GAAG,IAAI,eAAC,CAAC,AACP,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,GAAG,QAAQ,eAAC,CAAC,AACX,SAAS,CAAE,IAAI,AAGjB,CAAC"
}